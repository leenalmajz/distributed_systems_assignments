version: '3.8'

services:
  master:
    build: .
    hostname: master
    ports:
      - "7500:7500"
    command:
      - sh
      - -c
      - |
        sleep 5
        mpirun --host worker1,worker2,worker3,worker4,worker5 -np 5 python3 ml_service.py &
        python3 main.py
    volumes:
      - .:/app
    environment:
      - FLASK_APP=main.py
      - FLASK_ENV=development
      - FLASK_RUN_HOST=0.0.0.0  # Explicit host binding
      - FLASK_RUN_PORT=7500
      - RABBITMQ_HOST=rabbitmq
      - MODEL_PATH=/app/fraud_rf_model.pkl
    networks:
      - mpi_network
    depends_on:
      - rabbitmq
      - worker1
      - worker2
      - worker3
      - worker4
      - worker5

  worker1:
    build: .
    hostname: worker1
    command: ["python3", "-c", "from mpi4py import MPI; import time; time.sleep(3600)"]
    volumes:
      - .:/app
    networks:
      - mpi_network

  worker2:
    build: .
    hostname: worker2
    command: ["python3", "-c", "from mpi4py import MPI; import time; time.sleep(3600)"]
    volumes:
      - .:/app
    networks:
      - mpi_network

  worker3:
    build: .
    hostname: worker3
    command: ["python3", "-c", "from mpi4py import MPI; import time; time.sleep(3600)"]
    volumes:
      - .:/app
    networks:
      - mpi_network

  worker4:
    build: .
    hostname: worker4
    command: ["python3", "-c", "from mpi4py import MPI; import time; time.sleep(3600)"]
    volumes:
      - .:/app
    networks:
      - mpi_network

  worker5:
    build: .
    hostname: worker5
    command: ["python3", "-c", "from mpi4py import MPI; import time; time.sleep(3600)"]
    volumes:
      - .:/app
    networks:
      - mpi_network

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"  # Advance Message Queuing Protocol (AMQP)
      - "15672:15672"  # Management UI
    networks:
      - mpi_network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "status"]
      interval: 30s
      timeout: 10s
      retries: 5

networks:
  mpi_network:
    driver: bridge